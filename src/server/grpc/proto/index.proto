syntax = "proto3";

package fpindex;

import "google/api/annotations.proto";

message IndexInfo {
  string name = 1;
}

message GetAttributeRequest {
  string index_name = 1;
  string name = 2;
}

message GetAttributeResponse {
  string value = 2;
}

message InsertOrUpdateDocumentOp {
  uint32 doc_id = 1;
  repeated uint32 terms = 2;
};

message DeleteDocumentOp {
  uint32 doc_id = 1;
};

message SetAttributeOp {
  string name = 1;
  string value = 2;
};

message Operation {
    oneof op {
        InsertOrUpdateDocumentOp insert_or_update_document = 1;
        DeleteDocumentOp delete_document = 2;
        SetAttributeOp set_attribute = 3;
    }
};

message UpdateRequest {
  string index_name = 1;
  repeated Operation ops = 2;
};

message UpdateResponse {
};

message SearchResult {
    uint32 doc_id = 1;
    float score = 2;
};

message SearchRequest {
    string index_name = 1;
    repeated uint32 terms = 2;
    int32 max_results = 3;
};

message SearchResponse {
    repeated SearchResult results = 1;
};

message GetIndexRequest {
    string index_name = 1;
};

message GetIndexResponse {
    IndexInfo index = 1;
};

message CreateIndexRequest {
    string index_name = 1;
};

message CreateIndexResponse {
    IndexInfo index = 1;
};

message DeleteIndexRequest {
    string index_name = 1;
};

message DeleteIndexResponse {
};

message ListIndexesRequest {
};

message ListIndexesResponse {
    repeated IndexInfo indexes = 1;
};

service Index {
    rpc ListIndexes(ListIndexesRequest) returns (ListIndexesResponse) {
	option (google.api.http) = {    
		get: "/v1/index"
	};
    }

    rpc GetIndex(GetIndexRequest) returns (GetIndexResponse) {
	option (google.api.http) = {    
		get: "/v1/index/{index_name}"
	};
    }

    rpc CreateIndex(CreateIndexRequest) returns (CreateIndexResponse) {
    	option (google.api.http) = {
    		put: "/v1/index/{index_name}"
    		body: "*"
    	};
    }

    rpc DeleteIndex(DeleteIndexRequest) returns (DeleteIndexResponse) {
	option (google.api.http) = {    
		delete: "/v1/index/{index_name}"
	};
    }

    rpc GetAttribute(GetAttributeRequest) returns (GetAttributeResponse);

    rpc Update(UpdateRequest) returns (UpdateResponse) {
    	option (google.api.http) = {
    		post: "/v1/index/{index_name}/_update"
    		body: "*"
    	};
    }

    rpc Search(SearchRequest) returns (SearchResponse) {
    	option (google.api.http) = {
    		post: "/v1/index/{index_name}/_search"
    		body: "*"
    	};
    }
};
